# coding=utf-8
# *** WARNING: this file was generated by test. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'SandwichArgs',
]

@pulumi.input_type
class SandwichArgs:
    def __init__(__self__, *,
                 bread: pulumi.Input[Optional[str]] = None,
                 veggies: pulumi.Input[Optional[Sequence[pulumi.Input[str]]]] = None):
        if bread is not None:
            pulumi.set(__self__, "bread", bread)
        if veggies is not None:
            pulumi.set(__self__, "veggies", veggies)

    @property
    @pulumi.getter
    def bread(self) -> pulumi.Input[Optional[str]]:
        return pulumi.get(self, "bread")

    @bread.setter
    def bread(self, value: pulumi.Input[Optional[str]]):
        pulumi.set(self, "bread", value)

    @property
    @pulumi.getter
    def veggies(self) -> pulumi.Input[Optional[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "veggies")

    @veggies.setter
    def veggies(self, value: pulumi.Input[Optional[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "veggies", value)


